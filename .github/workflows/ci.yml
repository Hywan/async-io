name: CI

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '0 2 * * 0'

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        # --no-self-update is necessary because the windows environment cannot self-update rustup.exe.
        run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
      - run: cargo build --all --all-features --all-targets
      - run: sudo apt update && sudo apt install -y seatd && (seatd &) && ls /var/run
        if: startsWith(matrix.os, 'ubuntu')
      - name: Run cargo check (without dev-dependencies to catch missing feature flags)
        if: startsWith(matrix.rust, 'nightly')
        run: cargo check -Z features=dev_dep
      - name: Add rust-src
        if: startsWith(matrix.rust, 'nightly')
        run: rustup component add rust-src
# https://github.com/smol-rs/async-io/pull/144#issuecomment-1666927490
#      - name: Check selected Tier 3 targets
#        if: startsWith(matrix.rust, 'nightly') && matrix.os == 'ubuntu-latest'
#        run: cargo check -Z build-std --target=riscv32imc-esp-espidf
      - run: sudo chown runner:runner /var/run/seatd.sock
      - run: cargo test
